#!/usr/bin/env bash

# Abbreviation for herbstclient
hc() {
    herbstclient "$@"
}

hc emit_hook reload

#     _   _   _ _____ ___  ____ _____  _    ____ _____ 
#    / \ | | | |_   _/ _ \/ ___|_   _|/ \  |  _ \_   _|
#   / _ \| | | | | || | | \___ \ | | / _ \ | |_) || |  
#  / ___ \ |_| | | || |_| |___) || |/ ___ \|  _ < | |  
# /_/   \_\___/  |_| \___/|____/ |_/_/   \_\_| \_\|_|  
                                                     
nitrogen --restore || xsetroot -solid $background
setxkbmap -model pc105 -layout us,gr -option grp:rctrl_toggle -option ctrl:nocaps

#   ____ ___  _     ___  ____  ____  
#  / ___/ _ \| |   / _ \|  _ \/ ___| 
# | |  | | | | |  | | | | |_) \___ \ 
# | |__| |_| | |__| |_| |  _ < ___) |
#  \____\___/|_____\___/|_| \_\____/ 

background="#151515"
foreground="#d0d0d0"
black="#151515"
red="#ac4142"
green="#90a959"
yellow="#f4bf75"
blue="#6a9fb5"
magenta="#aa759f"
cyan="#75b5aa"
white="#d0d0d0"


# theme
hc set window_gap                   0
hc set frame_padding                0
hc set smart_window_surroundings    1
hc set smart_frame_surroundings     0
hc set mouse_recenter_gap           0
hc attr theme.tiling.reset          1
hc attr theme.floating.reset        1
hc set frame_border_active_color    $foreground
hc set frame_border_normal_color    $background
hc set frame_bg_normal_color        $magenta
hc set frame_bg_active_color        $white
hc set frame_border_width           1
hc set always_show_frame            1
hc set frame_bg_transparent         1
hc set frame_transparent_width      2
hc set frame_gap                    7
                                    
hc attr theme.active.color          $white
hc attr theme.normal.color          $black
hc attr theme.urgent.color          $red
hc attr theme.inner_width           1
hc attr theme.inner_color           black
hc attr theme.border_width          3
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width  1
hc attr theme.floating.outer_color  black
hc attr theme.active.inner_color    $green
hc attr theme.active.outer_color    $green
hc attr theme.background_color      $background

#  _  _________   ______  
# | |/ / ____\ \ / / ___| 
# | ' /|  _|  \ V /\___ \ 
# | . \| |___  | |  ___) |
# |_|\_\_____| |_| |____/ 

# remove all existing keybindings
hc keyunbind --all

# Use the super key as the main modifier
Mod=Mod4

# Apps
hc keybind $Mod-Return  spawn alacritty
hc keybind $Mod-Shift-p spawn rofi -show drun
hc keybind $Mod-Shift-e spawn emacsclient -c
hc keybind $Mod-Shift-b spawn firefox
hc keybind $Mod-Shift-f spawn alacritty -e nnn
hc keybind $Mod-b spawn waterfox

# WM Actions
hc keybind $Mod-Control-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-q close

# Navigating clients
hc keybind $Mod-h focus left
hc keybind $Mod-j focus down
hc keybind $Mod-k focus up
hc keybind $Mod-l focus right
#hc keybind $Mod-j     cycle_all 1
#hc keybind $Mod-k     cycle_all -1

# moving clients
hc keybind $Mod-Shift-h shift left
hc keybind $Mod-Shift-j shift down
hc keybind $Mod-Shift-k shift up
hc keybind $Mod-Shift-l shift right

# Frame management
hc keybind $Mod-r             remove
hc keybind $Mod-u             split bottom  0.5
hc keybind $Mod-o             split right   0.5
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h resize left  +$resizestep
hc keybind $Mod-Control-j resize down  +$resizestep
hc keybind $Mod-Control-k resize up    +$resizestep
hc keybind $Mod-Control-l resize right +$resizestep


# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal grid max             \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent


#  ____  _____ _____ _____ ___ _   _  ____ ____  
# / ___|| ____|_   _|_   _|_ _| \ | |/ ___/ ___| 
# \___ \|  _|   | |   | |  | ||  \| | |  _\___ \ 
#  ___) | |___  | |   | |  | || |\  | |_| |___) |
# |____/|_____| |_|   |_| |___|_| \_|\____|____/ 
                                               
# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# rules
hc unrule -F

#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients

#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors

# Reserve space for the panel
hc pad 0 31 0 0 0

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=~/.config/herbstluftwm/panel.sh
for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" $monitor &
done

